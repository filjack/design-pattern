/**
 * <p>
 *     策略模式：整体替换算法
 * </p>
 * <p>
 *     角色：
 *     <ul>
 *         <li>策略，定义实现策略所必须的接口</li>
 *         <li>具体的策略，实现策略，实现具体算法</li>
 *         <li>上下文，使用策略（委托方式），能够根据场景的不同切换使用的策略来完成不同的需求</li>
 *     </ul>
 * </p>
 * <p>
 *     优点：
 *     <ul>
 *         <li>使用委托来降低耦合度</li>
 *     </ul>
 * </p>
 */
package com.design.strategy;