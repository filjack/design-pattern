/**
 * <p>
 *     装饰者模式：装饰边框与被装饰物的一致性，不断为对象添加装饰
 * </p>
 * <p>
 *     角色：
 *     <ul>
 *         <li>组件，定义了一系列接口</li>
 *         <li>具体的组件，实现组件，实现了组件中的接口</li>
 *         <li>装饰物，也实现了组件，且内部持有一个组件（也就是被装饰的对象），实现组件的目的是使得组件被装饰了，也不会丢失组件中定义的方法
 *         ，保持了装饰物与组件的一致性</li>
 *         <li>具体的装饰物，实现装饰物</li>
 *     </ul>
 * </p>
 * <p>
 *     使用：
 *     <ul>
 *         <li>使用目的是为了在不改变组件的前提下增加（丰富）组件的功能（现有的功能）</li>
 *         <li>不可避免的是，装饰器模式会使得项目中增加很多小类</li>
 *     </ul>
 * </p>
 */
package com.design.decorator;