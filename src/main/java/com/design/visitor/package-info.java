/**
 * 访问者模式：访问数据结构并处理数据，将数据结构与处理分离开，通过访问者访问并处理数据机构中的元素，如果需要新的处理方法，只需要增加新的访问者即可
 * <p>
 *     角色：
 *     <ul>
 *         <li>访问者，定义处理数据结构中要素的方法，具体实现交给具体访问者</li>
 *         <li>具体访问者，实现访问者中定义的方法</li>
 *         <li>元素，声明了接受访问者的方法，实现该元素可以被访问者访问</li>
 *         <li>具体元素，实现了元素</li>
 *         <li>对象结构，负责处理元素的集合，通常内部持有一个元素的集合</li>
 *     </ul>
 * </p>
 * <p>
 *     使用：
 *     <ul>
 *         <li>访问者依赖于它要访问的数据结构，也就是类</li>
 *         <li>访问者模式采用双重分发思想，及元素接收访问者（accept方法），访问者又访问元素（visit方法）</li>
 *         <li>被访问者需要向访问者公开足够的信息才能很好的使用visitor模式，公开的界限需要把控</li>
 *     </ul>
 * </p>
 */
package com.design.visitor;